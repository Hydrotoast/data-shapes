# W3C Shapes Constraint Language (SHACL) Vocabulary

@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix vs:      <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix xsd:	 <http://www.w3.org/2001/XMLSchema#> .

@prefix sh: <http://www.w3.org/ns/shacl#> .

# TODO: Decide whether the owl:Ontology (and graph URI) includes the # or not
sh:
	a owl:Ontology ;
	dcterms:title "W3C Shapes Constraint Language (SHACL) Vocabulary" ;
	rdfs:comment
"""
<p>
This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.
</p>
<p>
This vocabulary is under development by the W3C Data Shapes Working Group.
The status of each term in this vocabulary is indicated using
<a href="http://www.w3.org/2003/06/sw-vocab-status/note">Term-centric Semantic Web Vocabulary Annotations</a>.
Terms are marked as <em>stable</em>, <em>unstable</em>, <em>testing</em>, or <em>archaic</em> according to the
current level of consensus within the Working Group.
</p>
"""^^rdf:XMLLiteral ;
	rdfs:label "SHACL Vocabulary" ;
	rdfs:seeAlso
		<https://www.w3.org/2014/data-shapes/wiki/Main_Page> ,
		<http://www.w3.org/TR/2015/WD-shacl-ucr-20150414/> ,
		<http://www.w3.org/TR/2015/WD-shacl-20151008/> ;
	dcterms:source <https://raw.githubusercontent.com/w3c/data-shapes/gh-pages/shacl/shacl-vocab.ttl> ;
	dcterms:license <http://www.w3.org/Consortium/Legal/2015/doc-license> ;
	dcterms:dateCopyrighted "2016" ;
.


# Shapes vocabulary -----------------------------------------------------------

sh:Shape
	a rdfs:Class ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Shape" ;
	rdfs:comment
"""
The class of SHACL shapes.
A shape is a grouping of descriptive information and constraints that can be applied to a node in a data graph.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:constraint
	a rdf:Property ;
	rdfs:comment
"""
This property links a shape to one of its constraints.
"""^^rdf:XMLLiteral ;
	rdfs:label "constraint" ;
	rdfs:domain sh:Shape ;
	rdfs:range sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:filterShape
	a rdf:Property ;
	rdfs:label "filter shape" ;
	rdfs:comment "Links a Shape to other Shapes that the tested nodes need to fulfill before the constraints of the shape are evaluated." ;
	rdfs:domain sh:Shape ;
	rdfs:range sh:Shape ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:inverseProperty
	a rdf:Property ;
	rdfs:comment
"""
This property links a shape to one of its inverse property constraints.
"""^^rdf:XMLLiteral ;
	rdfs:label "inverse property" ;
	rdfs:domain sh:Shape ;
	rdfs:range sh:InversePropertyConstraint ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:property
	a rdf:Property ;
	rdfs:comment
"""
This property links a shape to one of its property constraints.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "property" ;
	rdfs:domain sh:Shape ;
	rdfs:range sh:PropertyConstraint ;
	vs:term_status "stable" ;
.

sh:scope 
	a rdf:Property ;
	rdfs:label "scope" ;
	rdfs:comment
"""
This property links a shape to a scope.
The shape must be satisfied by all the nodes in the scope.
"""^^rdf:XMLLiteral ;
	rdfs:domain sh:Shape ;
	rdfs:range sh:Scope ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:scopeClass 
	a rdf:Property ;
	rdfs:label "scope class" ;
	rdfs:comment
"""
This property links a shape to a class.
The shape must be satisfied by all the instances of the class.
In this context, a resource is regarded as an instance of a class if there is an explicit rdf:type triple
linking the resource to the class or any of its subclasses as determined by explicit <code>rdfs:subClassOf</code> triples.
All resources are deemed to be instances of <code>rdfs:Resource</code>.
"""^^rdf:XMLLiteral ;
	rdfs:domain sh:Shape ;
	rdfs:range rdfs:Class ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:scopeNode 
	a rdf:Property ;
	rdfs:label "scope node" ;
	rdfs:comment
"""
This property links a shape to a resource.
The shape must be satisfied by resources linked this way.
"""^^rdf:XMLLiteral ;
	rdfs:domain sh:Shape ;
	# rdfs:range left intentionally blank - can have any value
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.


# Node kind vocabulary --------------------------------------------------------

sh:NodeKind
	a rdfs:Class ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Node kind" ;
	rdfs:comment 
"""
The class of all node kinds. 
A node is either a
<code><a href="#BlankNode">sh:BlankNode</a></code>,
<code><a href="#IRI">sh:IRI</a></code>, or
<code><a href="#Literal">sh:Literal</a></code>.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:BlankNode
	a sh:NodeKind ;
	rdfs:label "Blank node" ;
	rdfs:comment "The node kind of all blank nodes." ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:IRI
	a sh:NodeKind ;
	rdfs:label "IRI" ;
	rdfs:comment "The node kind of all IRIs." ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:Literal
	a sh:NodeKind ;
	rdfs:label "Literal" ;
	rdfs:comment "The node kind of all literals." ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.


# Results vocabulary ----------------------------------------------------------

sh:AbstractResult
	a rdfs:Class ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Abstract Result" ;
	rdfs:comment "Instances of subclasses of this class can be constructed during constraint validation." ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:ValidationResult
	a rdfs:Class ;
	rdfs:subClassOf sh:AbstractResult ;
	rdfs:label "Validation Result" ;
	rdfs:comment
"""
The class of all validation results.
A SHACL validator takes as input a shapes graph and a data graph, and produces as out a results graph.
The data graph satisfies the shapes graph if and only if the results graph contains no severe validation results.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:Severity
	a rdfs:Class ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Severity" ;
	rdfs:comment
"""
The class of all validation result severity levels.
A severity level is
<code><a href="#Info">sh:Info</a></code>,
<code><a href="#Warning">sh:Warning</a></code>, or
<code><a href="#Violation">sh:Violation</a></code>.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:Info
	a sh:Severity ;
	rdfs:label "Info" ;
	rdfs:comment
"""
The severity for an informational validation result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:Violation
	a sh:Severity ;
	rdfs:label "Violation" ;
	rdfs:comment
"""
The severity for a violation validation result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:Warning
	a sh:Severity ;
	rdfs:label "Warning" ;
	rdfs:comment 
"""
The severity for a warning validation result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	vs:term_status "stable" ;
.

sh:ResultAnnotation
	a rdfs:Class ;
	rdfs:subClassOf rdfs:Resource ;
	rdfs:label "Result annotation" ;
	rdfs:comment "Defines the rules to derive the values of a given annotation property as extra values for a constraint violation." ;
.


# Stuff below not yet edited by HK --------------------------------------------

# classes

sh:AllObjectsScope
	a rdfs:Class ;
	rdfs:subClassOf sh:Scope ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "AllObjectsScope" ;
	rdfs:comment
"""
The class of all scopes that include all object nodes in the data graph.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:AllSubjectsScope
	a rdfs:Class ;
	rdfs:subClassOf sh:Scope ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "AllSubjectsScope" ;
	rdfs:comment
"""
The class of all scopes that include all subject nodes in the data graph.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:AndConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "AndConstraint" ;
	rdfs:comment
"""
The class of all constraints that are conjunctions of two or more shapes.
The constraint is violated when not all of the shapes are satisifed.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:ClosedShapeConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "ClosedShapeConstraint" ;
	rdfs:comment
"""
The class of all closed shape constraints.
A closed shape constraint requires that all properties of the focus node must be mentioned in some property constraint or
in an optional list of additional allowed properties.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:Constraint
	a rdfs:Class ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "Constraint" ;
	rdfs:comment
"""
The class of all closed constraints.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:EqualConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "EqualConstraint" ;
	rdfs:comment
"""
The class of all constraints that require each value of a property to be equal to all the values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:Function
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "Function" ;
	rdfs:comment
"""
The class of all custom SPARQL functions.
The ability to define and invoke SPARQL functions is a proposed feature of SHACL.
"""^^rdf:XMLLiteral ;
	vs:term_status "unstable" .

sh:InversePropertyScope
	a rdfs:Class ;
	rdfs:subClassOf sh:Scope ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "InversePropertyScope" ;
	rdfs:comment
"""
The class of all scopes that include all values of a specified inverse property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:LessThanConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "LessThanConstraint" ;
	rdfs:comment
"""
The class of all constraints that require each value of a property to be less than all the values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:LessThanOrEqualConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "LessThanOrEqualConstraint" ;
	rdfs:comment
"""
The class of all constraints that require each value of a property to be less than or equal to all the values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:NotConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "NotConstraint" ;
	rdfs:comment
"""
The class of all constraints that are negations of a shape.
The constraint is violated when the negated shape is satisified.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:NotEqualConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "NotEqualConstraint" ;
	rdfs:comment
"""
The class of all constraints that require each value of a property to be not equal to all values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:OrConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "OrConstraint" ;
	rdfs:comment
"""
The class of all constraints that are disjunctions of two or more shapes.
The constrain is violated when at none of the shapes are satified.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:PropertyConstraint
	a rdfs:Class ;
	rdfs:subClassOf sh:Constraint ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "PropertyConstraint" ;
	rdfs:comment
"""
The class of all constraints that require each value of a property to be less than or equal to all the values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:PropertyScope
	a rdfs:Class ;
	rdfs:subClassOf sh:Scope ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "PropertyScope" ;
	rdfs:comment
"""
The class of all scopes that include all values of a specified property.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:Scope
	a rdfs:Class ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "Scope" ;
	rdfs:comment
"""
The class of all scope.
A scope defines a set of nodes in the data graph.
Each node in the scope of a shape becomes the focus node for each constraint in the shape when at SHACL validator validates a data graph against a shapes graph.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .

sh:Template
	a rdfs:Class ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "Template" ;
	rdfs:comment
"""
The class of all templates.
A template is a parameterized definition of a constraint written in some extension language such as SPARQL.
The template is defined in terms of declared formal parameters.
A shape provides actual parameters that correspond to the formal parameters.
The formal parameters are replaced by actual parameters when the constraint is evaluated.
"""^^rdf:XMLLiteral ;
	vs:term_status "stable" .


# properties

sh:class
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an RDF class.
The constraint is violated if some context node does not have the specified type.
Here a resource is deemed to be an instance of a class if its <code>rdf:type</code> is that class
or a subclass of that class via <code>rdfs:subClassOf</code>.
All resources are deemed to be instances of <code>rdfs:Resource</code>.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "class" ;
	rdfs:domain sh:Constraint ;
	rdfs:range rdfs:Class ;
	vs:term_status "stable" .

sh:datatype
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an RDF datatype.
The constraint is violated if the context node set is not a subset of dataype.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "datatype" ;
	rdfs:domain sh:Constraint ;
	rdfs:range rdfs:Datatype ;
	vs:term_status "stable" .

sh:detail
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a parent validation result with a child validation result that provides further detail.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "detail" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range rdfs:ValidationResult ;
	vs:term_status "stable" .

sh:directType
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an RDF class.
The constraint is violated if some context node does not have the specified type.
A resource is deemed to have a direct type when there is an explicit <code>rdf:type</code> triple
linking the resource to the type.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "directType" ;
	rdfs:domain sh:Constraint ;
	rdfs:range rdfs:Class ;
	vs:term_status "stable" .

sh:flags
	a rdf:Property ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "flags" ;
	rdfs:comment
"""
This property is an optional constraint parameter that defines flags to be used with regular expression pattern matching.
When present it requires the presence of <code><a href="#pattern">sh:pattern</a></code>.
Its syntax is the same as that used by the SPARQL <code>REGEX()</code> function.
The constraint is violated when any context node fails to match the regular expression defined
by the pattern and modified by the flags.
"""^^rdf:XMLLiteral ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:string ;
	vs:term_status "stable" .

sh:focusNode
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It species the focus node.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "focusNode" ;
	rdfs:domain sh:ValidationResult ;
	vs:term_status "stable" .

sh:hasValue
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a value.
The constraint is violated if the specified value is not a member of the context node set.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "hasValue" ;
	rdfs:domain sh:Constraint ;
	vs:term_status "stable" .

sh:in
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a list of allowed values.
The constraint is violated if the context node set is not a subset of the set of allowed values.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "in" ;
	rdfs:domain sh:Constraint ;
	rdfs:range rdf:List ;
	vs:term_status "stable" .

sh:maxCount
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if number of members in the set of context nodes is greater than the <code>maxCount</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "maxCount" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:maxExclusive
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if the value of any context node is greater than or equal to the <code>maxExclusive</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "maxExclusive" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:maxInclusive
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if value of any context node is greater than the <code>maxInclusive</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "maxInclusive" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:maxLength
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer.
The constraint is violated if the string length of any context node is greater than the <code>maxLength</code> value.
The definition of string length is the same as that used in the SPARQL <code>STRLEN()</code> function.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "maxLength" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:message
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a parent validation result to a child validation result that provides further detail.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "detail" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range sh:ValidationResult ;
	vs:term_status "stable" .

sh:minCount
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if number of members in the set of context nodes is less than the <code>minCount</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "minCount" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:minExclusive
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if the value of any context node is less than or equal to the <code>minExclusive</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "minExclusive" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:minInclusive
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if the value of any context node is less than to the <code>minInclusive</code> value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "minInclusive" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:minLength
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
The constraint is violated if the string length of any context node is less than the <code>minLength</code> value.
The definition of string length is the same as that used in the SPARQL <code>STRLEN()</code> function.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "minLength" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:nodeKind
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a node kind.
The constraint is violated if some context node is not of the specified kind.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "nodeKind" ;
	rdfs:domain sh:Constraint ;
	rdfs:range sh:NodeKind ;
	vs:term_status "stable" .

sh:object
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a validation result to its associated object node.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "object" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range rdfs:Resource ;
	vs:term_status "stable" .

sh:pattern
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a regular expression pattern in the same syntax as that defined for the SPARQL <code>REGEX()</code> function.
If the property <code><a href="#flags">sh:flags</a></code> is present then its value defines flags to be used for pattern matching.
The constraint is violated if some context node does not match the regular expression.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "directValueType" ;
	rdfs:domain sh:Constraint ;
	rdfs:range rdfs:Class ;
	vs:term_status "stable" .

sh:predicate
	a rdf:Property ;
	rdfs:comment
"""
This property is used to specify a predicate in both constraints and validation results.
In constraints, this property defines the predicate for property and inverse property constraints.
In validation resuts, this property defines a predicate associated with the validation result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "predicate" ;
	rdfs:range rdf:Property ;
	vs:term_status "stable" .

sh:qualifiedMaxCount
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
It requires the presence of sh:qualifedValueShape which specifies a value shape.
The constraint is violated if the number of context nodes that satisfy the value shape 
is greater than the qualifiedMaxCount value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "qualifiedMaxCount" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:qualifiedMinCount
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies an integer value.
It requires the presence of sh:qualifedValueShape which specifies a value shape.
The constraint is violated if the number of context nodes that satisfy the value shape 
is less than the qualifiedMinCount value.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "qualifiedMinCount" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:integer ;
	vs:term_status "stable" .

sh:qualifiedValueShape
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a value shape.
It requires the presence of
<code><a href="#qualifiedMaxCount">sh:qualifiedMaxCount</a></code> or
<code><a href="#qualifiedMinCount">sh:qualifiedMinCount</a></code>.
The constraint is violated if the number of context nodes that satisfy the value shape is less than the minimum
or greater than the maximum.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "qualifiedValueShape" ;
	rdfs:domain sh:Constraint ;
	rdfs:range sh:Shape ;
	vs:term_status "stable" .

sh:severity
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It specifies the severity level of the validation result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "severity" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range rdfs:Severity ;
	vs:term_status "stable" .

sh:sourceConstraint
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a validation result with the constraint that is the source of the result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "sourceConstraint" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range sh:Constraint ;
	vs:term_status "stable" .

sh:sourceShape
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a validation result with the shape that is the source of the result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "sourceShape" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range sh:Shape ;
	vs:term_status "stable" .

sh:sourceTemplate
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a validation result with the template that is the source of the result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "sourceTemplate" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range sh:Template ;
	vs:term_status "stable" .

sh:subject
	a rdf:Property ;
	rdfs:comment
"""
This property is a validation result attribute.
It links a validation result with the subject node that is associated with the result.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "subject" ;
	rdfs:domain sh:ValidationResult ;
	rdfs:range rdfs:Resource ;
	vs:term_status "stable" .

sh:uniqueLang
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a boolean value.
The constraint is violated if the boolean value is <code>true</code>
and two or more context nodes have language tags.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "uniqueLang" ;
	rdfs:domain sh:Constraint ;
	rdfs:range xsd:boolean ;
	vs:term_status "stable" .

sh:valueShape
	a rdf:Property ;
	rdfs:comment
"""
This property is a constraint parameter.
It specifies a shape.
The constraint is violated if some context node does not have the specified shape.
"""^^rdf:XMLLiteral ;
	rdfs:isDefinedBy sh: ;
	rdfs:label "valueShape" ;
	rdfs:domain sh:Constraint ;
	rdfs:range sh:Shape ;
	vs:term_status "stable" .


# Triples needed for code generation (to be deleted prior to final publication)
<#process-prefix> a <http://open-services.net/ns/core#PrefixDefinition> ;
	<http://open-services.net/ns/core#prefix> "sh" ;
	<http://open-services.net/ns/core#prefixBase> sh: .
