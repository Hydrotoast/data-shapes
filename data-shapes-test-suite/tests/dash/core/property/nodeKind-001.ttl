@prefix dash: <http://datashapes.org/dash#> .
@prefix ex: <http://datashapes.org/sh/tests/core/property/nodeKind-001.test#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sht: <http://www.w3.org/ns/shacl/test-suite#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ex:InstanceWithBlankNode
  rdf:type ex:MyClass ;
  ex:myProperty _:b55454 ;
.
ex:InstanceWithBlankNodeAndIRI
  rdf:type ex:MyClass ;
  ex:myProperty rdfs:Class ;
  ex:myProperty _:b67098 ;
.
ex:InstanceWithBlankNodeAndLiteral
  rdf:type ex:MyClass ;
  ex:myProperty "Literal" ;
  ex:myProperty _:b99026 ;
.
ex:InstanceWithIRI
  rdf:type ex:MyClass ;
  ex:myProperty rdfs:Class ;
.
ex:InstanceWithIRIAndLiteral
  rdf:type ex:MyClass ;
  ex:myProperty rdfs:Class ;
  ex:myProperty "Literal" ;
.
ex:InstanceWithLiteral
  rdf:type ex:MyClass ;
  ex:myProperty "Literal" ;
.
ex:MyClass
  rdf:type rdfs:Class ;
  rdfs:label "My class" ;
.
ex:ShapeWithBlankNode
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:BlankNode ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:ShapeWithBlankNodeOrIRI
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:BlankNodeOrIRI ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:ShapeWithBlankNodeOrLiteral
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:BlankNodeOrLiteral ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:ShapeWithIRI
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:ShapeWithIRIOrLiteral
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:IRIOrLiteral ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:ShapeWithLiteral
  rdf:type sh:Shape ;
  sh:property [
      sh:predicate ex:myProperty ;
      sh:nodeKind sh:Literal ;
    ] ;
  sh:targetClass ex:MyClass ;
.
ex:myProperty
  rdf:type rdf:Property ;
  rdfs:domain ex:MyClass ;
  rdfs:label "my property" ;
.
<>
  rdf:type mf:Manifest ;
  mf:entries (
      <nodeKind-001>
    ) ;
.
<nodeKind-001>
  rdf:type sht:Validate ;
  mf:action [
      sht:data <> ;
      sht:schema <> ;
    ] ;
  mf:result [
      rdf:type sh:ValidationReport ;
      sh:conforms "false"^^xsd:boolean ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNode ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b55454 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNode ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b55454 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNode ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b55454 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b67098 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b67098 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b67098 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b99026 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b99026 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithBlankNodeAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value _:b99026 ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRI ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value rdfs:Class ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithIRIAndLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:InstanceWithLiteral ;
          sh:resultPath ex:myProperty ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
          sh:value "Literal" ;
        ] ;
    ] ;
  mf:status sht:proposed ;
.
_:b55454
  rdf:type rdfs:Resource ;
.
_:b67098
  rdf:type rdfs:Resource ;
.
_:b99026
  rdf:type rdfs:Resource ;
.
